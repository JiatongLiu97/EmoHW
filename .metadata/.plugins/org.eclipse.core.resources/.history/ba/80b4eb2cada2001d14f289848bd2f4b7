import java.util.ArrayList;
import java.util.List;

import Models.Game;
import Models.Goal;
import Models.Player;
import Models.Team;

public class League {
	public static List<Goal> startOneMatch(Team team1, Team team2){
		List<Goal> goals = new ArrayList<>();
		int goalsNum = (int)Math.random()*8;
		int team1Size = team1.players.size();
		int team2Size = team2.players.size();
		for(int i = 1; i <= goalsNum; ++i) {
			// Team1 goals
			if(Math.random() <= 0.5) {
				int playerInx1 = (int)Math.random()*team1Size;
				Player playerGoal1 = team1.players.get(playerInx1);
				int randMin = (int)Math.random()*91;
				int ranSec = (int)Math.random()*60;
				double time = randMin + (double)ranSec/100;
				goals.add(new Goal(team1, playerGoal1, time));
			}
			// Team2 goals
			else {
				int playerInx2 = (int)Math.random()*team2Size;
				Player playerGoal2 = team2.players.get(playerInx2);
				int randMin = (int)Math.random()*91;
				int ranSec = (int)Math.random()*60;
				double time = randMin + (double)ranSec/100;
				goals.add(new Goal(team2, playerGoal2, time));
			}
		}
		return goals;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// Create players in team1
		Player player1InTeam1 = new Player("player1InTeam1");
		Player player2InTeam1 = new Player("player2InTeam1");
		Player player3InTeam1 = new Player("player3InTeam1");
		
		// Create List of players in team1
		List<Player> playersTeam1 = new ArrayList<>();
		playersTeam1.add(player1InTeam1);
		playersTeam1.add(player2InTeam1);
		playersTeam1.add(player3InTeam1);
		
		
		// Create players in team2
		Player player1InTeam2 = new Player("player1InTeam2");
		Player player2InTeam2 = new Player("player2InTeam2");
		Player player3InTeam2 = new Player("player3InTeam2");
		
		// Create List of players in team1
		List<Player> playersTeam2 = new ArrayList<>();
		playersTeam2.add(player1InTeam2);
		playersTeam2.add(player2InTeam2);
		playersTeam2.add(player3InTeam2);
		
		// Create two teams
		Team team1 = new Team("team1", playersTeam1);
		Team team2 = new Team("team2", playersTeam2);
		
		// Create goals
		List<Goal> goals = startOneMatch(team1, team2);
		
		// create Game
		Game game = new Game(team1, team2, goals);
		game.displayResult();
		
	}

}
